{"version":3,"sources":["maze.js","components/Map/index.js","components/Header/index.js","App.js","index.js"],"names":["mazeDir","Map","react_default","a","createElement","className","map","dir","i","key","style","borderTopColor","borderBottomColor","borderLeftColor","borderRightColor","Header","_ref","score","title","hp","status","String","length","Array","fill","_","join","formatScore","App","state","player","x","Math","floor","random","y","monster","items","changeKey","_this","action","includes","setState","dfs","pos","depth","last","playerPos","checkWall","newPos","Object","objectSpread","window","addEventListener","this","alert","pick","attack","concat","toConsumableArray","_this2","itemIndex","forEach","_ref2","filter","App_Item","assign","c","_this3","find","_this4","removeEventListener","ref","r","game","components_Header","renderItems","renderPlayer","renderMonster","components_Map","Component","Item","_ref3","transform","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.a7f43096.chunk.js","sourcesContent":["export const mazeDir = [\n  [0, 1, 0, 0],\n  [0, 1, 0, 1],\n  [0, 1, 1, 1],\n  [0, 0, 1, 1],\n  [0, 1, 1, 0],\n  [0, 1, 0, 1],\n  [0, 0, 1, 1],\n  [0, 0, 1, 1],\n  [0, 1, 1, 0],\n  [0, 1, 0, 0],\n  [0, 1, 0, 1],\n  [0, 0, 1, 1],\n  [0, 1, 1, 1],\n  [0, 1, 1, 0],\n  [0, 1, 0, 1],\n  [0, 1, 1, 0],\n  [1, 1, 0, 1],\n  [1, 0, 1, 0],\n  [1, 1, 0, 0],\n  [0, 0, 0, 1],\n  [1, 1, 1, 0],\n  [1, 0, 0, 1],\n  [0, 0, 1, 1],\n  [0, 1, 1, 0],\n  [1, 1, 0, 0],\n  [1, 0, 0, 1],\n  [1, 0, 1, 0],\n  [0, 1, 0, 1],\n  [1, 0, 1, 0],\n  [1, 0, 0, 1],\n  [1, 0, 1, 0],\n  [1, 1, 0, 0],\n  [1, 1, 0, 0],\n  [0, 1, 0, 0],\n  [1, 0, 0, 1],\n  [0, 1, 1, 0],\n  [1, 0, 0, 1],\n  [0, 0, 1, 1],\n  [0, 0, 1, 1],\n  [1, 0, 1, 0],\n  [1, 0, 0, 1],\n  [0, 0, 1, 1],\n  [0, 1, 1, 0],\n  [1, 0, 0, 1],\n  [0, 1, 1, 1],\n  [0, 1, 1, 0],\n  [0, 1, 0, 0],\n  [1, 1, 0, 0],\n  [1, 1, 0, 0],\n  [1, 1, 0, 1],\n  [0, 1, 1, 0],\n  [1, 0, 0, 1],\n  [0, 1, 1, 0],\n  [0, 1, 0, 1],\n  [0, 0, 1, 1],\n  [0, 1, 1, 0],\n  [0, 0, 0, 1],\n  [0, 0, 1, 1],\n  [1, 0, 1, 1],\n  [0, 1, 1, 0],\n  [1, 0, 0, 0],\n  [1, 1, 0, 0],\n  [1, 1, 0, 1],\n  [1, 0, 1, 0],\n  [1, 1, 0, 0],\n  [1, 1, 0, 0],\n  [1, 0, 0, 1],\n  [0, 1, 1, 0],\n  [1, 1, 0, 0],\n  [1, 1, 0, 0],\n  [0, 1, 0, 0],\n  [1, 1, 0, 0],\n  [0, 1, 0, 1],\n  [0, 1, 1, 0],\n  [0, 1, 0, 1],\n  [1, 0, 1, 0],\n  [0, 1, 0, 1],\n  [1, 0, 1, 0],\n  [1, 0, 0, 1],\n  [0, 1, 1, 0],\n  [1, 0, 0, 1],\n  [1, 0, 1, 0],\n  [0, 1, 0, 1],\n  [1, 0, 1, 0],\n  [1, 1, 0, 0],\n  [1, 1, 0, 0],\n  [1, 1, 0, 0],\n  [1, 0, 0, 1],\n  [1, 0, 1, 0],\n  [1, 1, 0, 0],\n  [1, 0, 0, 1],\n  [0, 1, 1, 0],\n  [1, 1, 0, 0],\n  [0, 1, 0, 1],\n  [0, 1, 1, 0],\n  [1, 1, 0, 0],\n  [0, 1, 0, 0],\n  [0, 1, 0, 1],\n  [1, 0, 1, 0],\n  [0, 1, 0, 1],\n  [1, 0, 1, 0],\n  [1, 1, 0, 1],\n  [1, 0, 1, 0],\n  [0, 1, 0, 1],\n  [0, 1, 1, 0],\n  [1, 0, 0, 1],\n  [0, 1, 1, 0],\n  [1, 1, 0, 0],\n  [1, 1, 0, 0],\n  [1, 0, 0, 0],\n  [1, 1, 0, 0],\n  [1, 1, 0, 0],\n  [1, 1, 0, 0],\n  [1, 0, 0, 1],\n  [0, 1, 1, 0],\n  [1, 0, 0, 1],\n  [0, 0, 1, 1],\n  [1, 0, 1, 0],\n  [0, 1, 0, 1],\n  [1, 1, 1, 0],\n  [1, 0, 0, 1],\n  [0, 0, 1, 1],\n  [1, 0, 1, 0],\n  [1, 0, 0, 1],\n  [1, 0, 1, 0],\n  [0, 1, 0, 1],\n  [1, 0, 1, 0],\n  [1, 1, 0, 0],\n  [1, 1, 0, 1],\n  [0, 0, 1, 1],\n  [1, 0, 1, 1],\n  [0, 0, 1, 1],\n  [0, 0, 1, 0],\n  [0, 1, 0, 1],\n  [1, 0, 1, 0],\n  [1, 0, 0, 0],\n  [0, 1, 0, 1],\n  [0, 1, 1, 0],\n  [0, 1, 0, 0],\n  [0, 1, 0, 1],\n  [0, 1, 1, 0],\n  [1, 1, 0, 1],\n  [0, 0, 1, 1],\n  [1, 0, 1, 0],\n  [1, 1, 0, 1],\n  [0, 0, 1, 1],\n  [0, 0, 1, 0],\n  [0, 1, 0, 1],\n  [0, 0, 1, 1],\n  [1, 0, 1, 0],\n  [0, 1, 0, 1],\n  [0, 0, 1, 1],\n  [1, 0, 1, 0],\n  [1, 1, 0, 0],\n  [1, 1, 0, 1],\n  [1, 0, 1, 0],\n  [1, 1, 0, 0],\n  [1, 0, 0, 1],\n  [0, 0, 1, 1],\n  [0, 1, 1, 0],\n  [1, 0, 0, 0],\n  [0, 1, 0, 1],\n  [0, 0, 1, 1],\n  [1, 1, 1, 0],\n  [0, 1, 0, 1],\n  [0, 0, 1, 1],\n  [1, 0, 1, 0],\n  [0, 1, 0, 1],\n  [0, 1, 1, 0],\n  [1, 1, 0, 0],\n  [1, 0, 0, 1],\n  [0, 0, 1, 0],\n  [1, 0, 0, 1],\n  [0, 1, 1, 1],\n  [0, 1, 1, 0],\n  [1, 1, 0, 0],\n  [0, 1, 0, 1],\n  [1, 0, 1, 0],\n  [0, 1, 0, 0],\n  [1, 1, 0, 0],\n  [1, 1, 0, 0],\n  [0, 1, 0, 1],\n  [0, 0, 1, 1],\n  [1, 0, 1, 0],\n  [1, 0, 0, 0],\n  [1, 0, 0, 1],\n  [0, 0, 1, 1],\n  [0, 0, 1, 1],\n  [0, 1, 1, 0],\n  [1, 1, 0, 0],\n  [1, 0, 0, 1],\n  [1, 0, 1, 0],\n  [1, 1, 0, 0],\n  [0, 1, 0, 1],\n  [1, 0, 1, 0],\n  [1, 1, 0, 0],\n  [1, 1, 0, 0],\n  [1, 1, 0, 1],\n  [0, 1, 1, 0],\n  [0, 1, 0, 1],\n  [0, 0, 1, 1],\n  [0, 1, 1, 1],\n  [0, 1, 1, 0],\n  [0, 1, 0, 0],\n  [1, 1, 0, 0],\n  [1, 0, 0, 1],\n  [0, 0, 1, 1],\n  [0, 0, 1, 0],\n  [1, 1, 0, 0],\n  [1, 1, 0, 0],\n  [0, 0, 0, 1],\n  [1, 0, 1, 0],\n  [1, 1, 0, 0],\n  [1, 1, 0, 0],\n  [1, 0, 0, 1],\n  [1, 0, 1, 0],\n  [0, 1, 0, 0],\n  [1, 1, 0, 0],\n  [1, 1, 0, 0],\n  [1, 1, 0, 0],\n  [1, 1, 0, 0],\n  [0, 1, 0, 1],\n  [0, 0, 1, 1],\n  [0, 1, 1, 0],\n  [1, 1, 0, 0],\n  [1, 0, 0, 1],\n  [0, 0, 1, 1],\n  [0, 0, 1, 1],\n  [1, 0, 1, 0],\n  [1, 0, 0, 1],\n  [0, 1, 1, 0],\n  [0, 1, 0, 1],\n  [1, 1, 1, 0],\n  [1, 1, 0, 0],\n  [1, 0, 0, 1],\n  [1, 0, 1, 0],\n  [1, 0, 0, 1],\n  [1, 0, 1, 0],\n  [0, 1, 0, 0],\n  [1, 1, 0, 0],\n  [1, 0, 0, 1],\n  [0, 0, 1, 1],\n  [0, 0, 1, 1],\n  [0, 0, 1, 1],\n  [0, 0, 1, 1],\n  [0, 0, 1, 1],\n  [1, 0, 1, 1],\n  [1, 0, 1, 0],\n  [1, 0, 0, 0],\n  [1, 0, 0, 1],\n  [0, 0, 1, 1],\n  [0, 0, 1, 1],\n  [0, 0, 1, 1],\n  [0, 0, 1, 1],\n  [1, 0, 1, 1],\n  [1, 0, 1, 0],\n];\n","import React from 'react';\nimport './style.css';\nimport { mazeDir } from '../../maze';\n\nconst Map = () => {\n  return (\n    <div className=\"map\">\n      {mazeDir.map((dir, i) => (\n        <div\n          key={i}\n          className=\"block\"\n          style={{\n            borderTopColor: dir[0] ? 'transparent' : 'white',\n            borderBottomColor: dir[1] ? 'transparent' : 'white',\n            borderLeftColor: dir[2] ? 'transparent' : 'white',\n            borderRightColor: dir[3] ? 'transparent' : 'white',\n          }}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Map;\n","import React from 'react';\n\nfunction Header({ score, title, hp, status }) {\n  return (\n    <div className=\"header\">\n      <div className=\"left\">\n        <div>Score</div>\n        <div>{formatScore(score)}</div>\n      </div>\n      <div className=\"right\">\n        <div>HP</div>\n        <div>\n          {Array(hp)\n            .fill()\n            .map(_ => 'x')}\n        </div>\n      </div>\n      <div>{title}</div>\n      <div>{status === 'gameOver' ? 'Game Over' : ''}</div>\n    </div>\n  );\n}\nfunction formatScore(score) {\n  if (String(score).length < 5) {\n    return (\n      Array(5 - String(score).length)\n        .fill()\n        .map(_ => '0')\n        .join('') + score\n    );\n  }\n  return score;\n}\nexport default Header;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { mazeDir } from './maze';\nimport Map from './components/Map';\nimport Header from './components/Header';\n\nclass App extends Component {\n  state = {\n    player: {\n      x: Math.floor(Math.random() * 8),\n      y: Math.floor(Math.random() * 8),\n    },\n    monster: {\n      x: Math.floor(Math.random() * 8) + 8,\n      y: Math.floor(Math.random() * 8) + 8,\n    },\n    // player: { x: 0, y: 0 },\n    // monster: { x: 8, y: 0 },\n    items: [],\n    key: '',\n    score: 0,\n    hp: 5,\n    status: 'start',\n  };\n  componentDidMount() {\n    window.addEventListener('keypress', this.changeKey);\n  }\n  changeKey = ({ key }) => {\n    if (key === 'Enter') {\n      this.action();\n    } else if ('wasdef'.includes(key)) this.setState({ key });\n  };\n  action() {\n    const pos = { ...this.state.player };\n    switch (this.state.key) {\n      case 'w':\n        if (checkWall(pos, 0)) {\n          pos.y -= 1;\n        } else {\n          alert('Boom!');\n        }\n        break;\n      case 's':\n        if (checkWall(pos, 1)) {\n          pos.y += 1;\n        } else {\n          alert('Boom!');\n        }\n        break;\n      case 'a':\n        if (checkWall(pos, 2)) {\n          pos.x -= 1;\n        } else {\n          alert('Boom!');\n        }\n        break;\n      case 'd':\n        if (checkWall(pos, 3)) {\n          pos.x += 1;\n        } else {\n          alert('Boom!');\n        }\n        break;\n      case 'e':\n        return this.pick();\n      case 'f':\n        return this.attack();\n      default:\n    }\n    const monster = this.dfs(this.state.monster, 0, 42, pos);\n    let hp = this.state.hp;\n    if (\n      this.state.monster.x === this.state.player.x &&\n      this.state.monster.y === this.state.player.y\n    ) {\n      if (hp > 2) {\n        hp -= 2;\n      } else {\n        this.setState({\n          player: pos,\n          key: '',\n          hp: 0,\n          monster: monster ? monster : this.state.monster,\n          status: 'gameOver',\n        });\n        return;\n      }\n    }\n\n    this.setState({\n      player: pos,\n      key: '',\n      hp,\n      monster: monster ? monster : this.state.monster,\n    });\n  }\n  attack() {\n    if (\n      this.state.player.x === this.state.monster.x &&\n      this.state.player.y === this.state.monster.y\n    ) {\n      const monster = {\n        x: Math.floor(Math.random() * 16),\n        y: Math.floor(Math.random() * 16),\n      };\n      this.setState({\n        monster,\n        items: [...this.state.items, { ...this.state.player }],\n        score: this.state.score + 1,\n      });\n    } else {\n      alert('Boom!');\n    }\n  }\n  pick() {\n    let itemIndex = -1;\n    this.state.items.forEach(({ x, y }, i) => {\n      if (x === this.state.player.x && y === this.state.player.y) {\n        itemIndex = i;\n      }\n    });\n    if (itemIndex === -1) {\n      alert('Boom!');\n      return;\n    }\n    const items = this.state.items.filter((_, i) => i !== itemIndex);\n    let hp = this.state.hp;\n    hp = hp === 5 ? 5 : hp + 1;\n    this.setState({\n      items,\n      hp,\n    });\n  }\n  renderItems() {\n    return this.state.items.map((pos, i) => <Item key={i} {...pos} c=\"i\" />);\n  }\n  renderMonster() {\n    let c = 'M';\n    if (\n      this.state.player.x === this.state.monster.x &&\n      this.state.player.y === this.state.monster.y\n    )\n      c = 'B';\n    return <Item c={c} {...this.state.monster} />;\n  }\n  renderPlayer() {\n    let c = 'O';\n    const item = this.state.items.find(\n      pos => pos.x === this.state.player.x && pos.y === this.state.player.y,\n    );\n    if (item) c = 'G';\n    return <Item c={c} {...this.state.player} />;\n  }\n  dfs = (pos, depth, last, playerPos) => {\n    if (depth === 5) return false;\n    if (playerPos.x === pos.x && playerPos.y === pos.y) return pos;\n    for (let dir = 0; dir < 4; dir++) {\n      if ((last ^ 1) === dir) continue;\n      if (checkWall(pos, dir)) {\n        let newPos = { ...pos };\n        switch (dir) {\n          case 0:\n            newPos.y -= 1;\n            break;\n          case 1:\n            newPos.y += 1;\n            break;\n          case 2:\n            newPos.x -= 1;\n            break;\n          case 3:\n            newPos.x += 1;\n            break;\n          default:\n        }\n        if (this.dfs(newPos, depth + 1, dir, playerPos)) {\n          return newPos;\n        }\n      }\n    }\n    return false;\n  };\n  render() {\n    if (this.state.status === 'gameOver') {\n      window.removeEventListener('keypress', this.changeKey);\n    }\n    return (\n      <div className=\"App\" ref={r => (this.game = r)}>\n        <Header\n          title=\"Dungeons v1.0.1\"\n          score={this.state.score}\n          hp={this.state.hp}\n          status={this.state.status}\n        />\n        {this.renderItems()}\n        {this.renderPlayer()}\n        {this.renderMonster()}\n        <Map />\n        <div className=\"key\">{`[>] action: ${this.state.key}`}</div>\n      </div>\n    );\n  }\n}\n\nconst Item = ({ x, y, c }) => (\n  <div\n    style={{ transform: `translate(${x * 50}px,${y * 50}px)` }}\n    className=\"item\"\n  >\n    {c}\n  </div>\n);\n\nfunction checkWall(pos, dir) {\n  if (mazeDir[pos.x + pos.y * 16][dir]) {\n    return true;\n  } else {\n    return false;\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// serviceWorker.unregister();\n"],"sourceRoot":""}